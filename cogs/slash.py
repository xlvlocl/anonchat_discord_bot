from ..init import (search_user, stop, disnake, commands,
                    MongoClient, config, HTTPException, Option, OptionType, embed_generator, post_stats)


class MyView(disnake.ui.StringSelect):
    def __init__(self):
        options = [
            disnake.SelectOption(
                label="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª",
                description="–ë–æ—Ç —Å–æ–∑–¥–∞—Å—Ç –∫–∞–Ω–∞–ª –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç —á–∞—Ç —Å–∞–º",
                emoji='‚öô',
                ),
            disnake.SelectOption(
                label="–í—ã–±—Ä–∞—Ç—å –∏–º–µ—é—â–∏–π—Å—è",
                description="–í—ã —É–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏",
                emoji='üó≥',
                )
            ]

        super().__init__(
            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
            min_values=1,
            max_values=1,
            options=options,
            custom_id="select1"
            )

    class MyViewx(disnake.ui.ChannelSelect):
        def __init__(self):
            super().__init__(
                placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª",
                channel_types=[disnake.ChannelType.text],
                min_values=1,
                max_values=1,
                custom_id="select2"
                )


class Slash(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.cluster = MongoClient(config.config["database"])
        anon = "AnonChatDev" if config.dev else "AnonChat"
        self.collection = self.cluster[anon].anon
        self.search = self.cluster[anon].search
        self.stats = self.cluster[anon].stats
        self.guild = self.cluster[anon].guilds
        self.economy = self.cluster[anon].economy

    @commands.slash_command(
        name="start", description="–î–æ–±–∞–≤–ª—è–µ—Ç –≤–∞—Å –≤ –æ—á–µ—Ä–µ–¥—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç", dm_permission=True
        )
    async def start(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except:
            pass

        await search_user(inter, self.bot)

    @commands.slash_command(
        name="next", description="–£–¥–∞–ª—è–µ—Ç –≤–∞—Å –∏–∑ —á–∞—Ç–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –æ—á–µ—Ä–µ–¥—å", dm_permission=True
        )
    async def next(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except:
            pass
        try:
            findd = self.collection.find_one({'_id': inter.author.id})['comp']
        except:
            findd = 0
        if findd == 0:
            emb = embed_generator(author_name="–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —á–∞—Ç–µ", icon_url=self.bot.user.avatar)
            return await inter.send(embed=emb)
        try:
            mode = self.stats.find_one({"_id": inter.author.id})["mode"]
        except:
            mode = 0

        await stop(inter, self.bot, locale=True if mode == 1 else False)
        await search_user(inter, self.bot, frombtn=True, locale=True if mode == 1 else False)

    @commands.slash_command(
        name="stop", description="–£–¥–∞–ª—è–µ—Ç –≤–∞—Å –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –∏–ª–∏ —á–∞—Ç–∞", dm_permission=True
        )
    async def stop(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except:
            pass
        await stop(inter, self.bot)

    @commands.slash_command(name="help", description="–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ", dm_permission=True)
    async def help(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        embed = embed_generator(
            description="–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞. –î–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–∞–Ω–¥–µ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ—ë.",
            author_name="–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥", icon_url=self.bot.user.avatar
            )

        await inter.followup.send(
            embed=embed,
            components=[
                disnake.ui.StringSelect(
                    custom_id="command",
                    options=['start', 'next', 'stop', 'help', 'info', 'setup', 'unsetup', 'profile', 'send profile', 'bug', 'say', 'shop', 'rps', 'promo'],
                    )
                ],
            )

    @commands.slash_command(name="info", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", dm_permission=True)
    async def info(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        ping = self.bot.latency * 1000

        emb = embed_generator(
            description=f"„Éª *Developer -*  **xlvlocl**\n"
                        f"„Éª **[–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏](https://discord.gg/YBzKe7vCYY)**\n"
                        f"„Éª *–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤* **[—Ç—É—Ç](https://bots.server-discord.com/1180439411062734949)** *–∏* **[—Ç—É—Ç](https://boticord.top/bot/1180439411062734949)**\n\n"
                        f"„Éª *–ü–∏–Ω–≥ -*  **{int(ping)}** *–º—Å*\n"
                        f"„Éª *–°–µ—Ä–≤–µ—Ä–æ–≤ -*  **{len(self.bot.guilds)}**\n"
                        f"„Éª **[–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞](https://discord.com/oauth2/authorize?client_id=1180439411062734949)**",
            author_name="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", icon_url=self.bot.user.avatar
            )
        await inter.send(embed=emb)

    @commands.slash_command(name="setup", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–Ω–æ–Ω-—á–∞—Ç", dm_permission=False)
    @commands.default_member_permissions(administrator=True)
    async def setup(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        post = {
            '_id': inter.guild.id,
            'channel': 0,
            'chats': 0,
            'messages': 0
            }
        if 0 == self.guild.count_documents({"_id": inter.guild.id}):
            self.guild.insert_one(post)

        try:
            channel = self.guild.find_one({'_id': inter.guild.id})['channel']
        except:
            channel = 0

        if channel != 0:
            embx = embed_generator(
                description=f"–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç!\n"
                            f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ —É–¥–∞–ª–∏—Ç—å, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É </unsetup:1180457805069692933>",
                author_name="–û—à–∏–±–∫–∞", icon_url=self.bot.user.avatar
                )
            await inter.send(embed=embx)
        else:
            view = disnake.ui.View()
            view.add_item(MyView())
            await inter.send(view=view)

    @commands.Cog.listener()
    async def on_interaction(self, inter: disnake.MessageInteraction):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        try:
            a = inter.component.custom_id
        except:
            a = None
        if a == "command":

            if inter.values[0] == "start":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(
                    name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–î–æ–±–∞–≤–ª—è–µ—Ç –≤–∞—Å –≤ **–≥–ª–æ–±–∞–ª—å–Ω—ã–π** –ø–æ–∏—Å–∫, "
                                           "–≤—ã –±—É–¥–µ—Ç–µ –æ–∂–∏–¥–∞—Ç—å –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
                                           " –Ω–µ —Ä–µ—à–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.", inline=False
                    )
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</start:1238618601393754284>", inline=True)
                embed.set_image(file=disnake.File('files/start.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "next":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(
                    name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —á–∞—Ç –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –≤–∞—Å "
                                           "–Ω–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ—á–µ—Ä–µ–¥–∏, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, "
                                           "–∏–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –ø–æ–∏—Å–∫.", inline=False
                    )
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</next:1238615248538304583>", inline=True)
                embed.set_image(file=disnake.File('files/next.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "stop":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —á–∞—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, –∏ —É–¥–∞–ª—è–µ—Ç –≤–∞—Å –∏–∑ –ø–æ–∏—Å–∫–∞.", inline=False)
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</stop:1180457805069692929>", inline=True)
                embed.set_image(file=disnake.File('files/stop.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "help":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.", inline=False)
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</help:1180454759191298141>", inline=True)
                embed.set_image(file=disnake.File('files/help.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "info":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞–º –Ω–µ–∫–æ—Ç–æ—Ä—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ.", inline=False)
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</info:1180457805069692930>", inline=True)
                embed.set_image(file=disnake.File('files/info.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "unsetup":
                try:
                    rights = inter.channel.permissions_for(inter.author).administrator
                except:
                    rights = False
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(
                    name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–£–¥–∞–ª—è–µ—Ç –∫–∞–Ω–∞–ª —Å –∞–Ω–æ–Ω–∏–º–Ω—ã–º —á–∞—Ç–æ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏–ª–∏ "
                                           "–æ—Ç–∫–ª—é—á–∞–µ—Ç –µ–≥–æ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.", inline=False
                    )
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å" if rights else "–ù–µ—Ç—É", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</unsetup:1180457805069692933>", inline=True)
                embed.set_image(file=disnake.File('files/unsetup.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "setup":
                try:
                    rights = inter.channel.permissions_for(inter.author).administrator
                except:
                    rights = False
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(
                    name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–°–æ–∑–¥–∞–µ—Ç –∫–∞–Ω–∞–ª —Å –∞–Ω–æ–Ω–∏–º–Ω—ã–º —á–∞—Ç–æ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç "
                                           "—Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞–Ω–µ–ª—å—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª.", inline=False
                    )
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å" if rights else "–ù–µ—Ç—É", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</setup:1180457805069692931>", inline=True)
                embed.set_image(file=disnake.File('files/setup.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "profile":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –ø—Ä–æ—Ñ–ª—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω. –¢–∞–∫–∂–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å **—Å–≤–æ–π** –ø—Ä–æ—Ñ–∏–ª—å.", inline=False)
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</profile:1180457805069692935> `member:`@xlvlocl\n\n</profile:1180457805069692935>", inline=True)
                embed.set_image(file=disnake.File('files/profile.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "send profile":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É.", inline=False)
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</send profile:1180457805069692934>", inline=True)
                embed.set_image(file=disnake.File('files/sendprofile.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "bug":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É –æ—à–∏–±–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã –Ω–∞—à–ª–∏", inline=False)
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</bug:1180457805069692936> `–ø—Ä–æ–±–ª–µ–º–∞:`–ö–∞–∫–∞—è —Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ `—Å–∫—Ä–∏–Ω—à–æ—Ç:`123.png", inline=True)
                embed.set_image(file=disnake.File('files/bug.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "say":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –≤–µ–±—Ö—É–∫–∞ –≤ —Ç–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª –∏–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –ø—Ä–∞–≤–∞.", inline=False)
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=False)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</say:1180457805308760145> `message:`–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º `channel:`#‚ÇäÀö‚ÄßüóΩ‚Çä‚ïé—Ç–µ—Å—Ç—ã `file:`123.png `new:`True *\n\n*new - —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –≤–µ–±–∫—É—Ö —Å –¥—Ä—É–≥–∏–º –∞–≤–∞—Ç–∞—Ä–æ–º –∏ –Ω–∏–∫–æ–º –µ—Å–ª–∏ True, –∏–Ω–∞—á–µ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ—Ç, —á—Ç–æ –µ—Å—Ç—å.", inline=False)
                embed.set_image(file=disnake.File('files/say.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "shop":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞–º –º–µ–Ω—é –ø–æ–∫—É–ø–∫–∏ / —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏, –≤–∞–ª—é—Ç–æ–π –∏ –ø—Ä–æ—á–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏.", inline=False)
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</shop:1213395653510832169>", inline=True)
                embed.set_image(file=disnake.File('files/shop.png'))
                await inter.send(embed=embed, ephemeral=True)

            elif inter.values[0] == "promo":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–í—ã–¥–∞—ë—Ç –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –≤–≤–µ–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞.", inline=False)
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</promo:1297976343539220481> `code:`YrgciixaLLx4CkyO", inline=True)
                embed.set_image(file=disnake.File('files/promo.png'))
                await inter.send(embed=embed, ephemeral=True)
            elif inter.values[0] == "rps":
                embed = embed_generator(
                    author_name=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ {inter.values[0]}",
                    icon_url=self.bot.user.avatar
                    )
                embed.add_field(
                    name="–û–ø–∏—Å–∞–Ω–∏–µ", value="–í—ã–∑—ã–≤–∞–µ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –Ω–∞ –∏–≥—Ä—É –≤ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥—É, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, "
                                           "—á—Ç–æ –∞–≤—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã –∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∫—É–ø–∏–ª–∏ –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ \"–°—Ç—Ä–∞–Ω–Ω—ã–π –ø–∞–∫–µ—Ç–∏–∫\" –≤ –º–∞–≥–∞–∑–∏–Ω–µ.",
                    inline=False
                    )
                embed.add_field(name="–ü—Ä–∞–≤–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", value="–ï—Å—Ç—å", inline=True)
                embed.add_field(name="–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", value="</rps:1297976343539220480> `–ø—Ä–µ–¥–º–µ—Ç:`–∫–∞–º–µ–Ω—å `—Å—Ç–∞–≤–∫–∞:`100", inline=True)
                embed.set_image(file=disnake.File('files/rps.png'))
                await inter.send(embed=embed, ephemeral=True)

        if a == "select1":
            if inter.values[0] == "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª":
                buttons = disnake.ui.View()
                buttons.add_item(
                    disnake.ui.Button(
                        label='–°—Ç–∞—Ä—Ç', emoji='<:321:1095340832711770222>',
                        style=disnake.ButtonStyle.gray,
                        custom_id="startV2"
                        )
                    )
                buttons.add_item(
                    disnake.ui.Button(
                        label='–°—Ç–æ–ø', emoji='<:123:1095340836826394644>',
                        style=disnake.ButtonStyle.gray,
                        custom_id="stopV2"
                        )
                    )
                buttons.add_item(
                    disnake.ui.Button(
                        label='–ò–Ω—Ñ–æ', emoji='<:456:1095340827896725504>',
                        style=disnake.ButtonStyle.gray,
                        custom_id="infoV2"
                        )
                    )
                buttons.add_item(
                    disnake.ui.Button(
                        label='–†–µ–∂–∏–º', emoji='‚öô',
                        style=disnake.ButtonStyle.gray,
                        custom_id="mode"
                        )
                    )
                emb1 = embed_generator(
                    title="–°–æ–≤–µ—Ç",
                    description=f"–†–µ–∫–æ–º–µ–Ω–¥—É—é –æ—Ç–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!\n"
                                f"–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥",
                    author_name="–°–æ–≤–µ—Ç", icon_url=self.bot.user.avatar
                    )

                emb = embed_generator()
                emb.set_image(file=disnake.File('files/banner.png'))

                embx = embed_generator(
                    description=f"–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤–∞ –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª / —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞–Ω–∞–ª",
                    author_name="–û—à–∏–±–∫–∞", icon_url=self.bot.user.avatar
                    )

                try:
                    channe = await inter.channel.category.create_text_channel("–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç")
                except:
                    try:
                        channe = await inter.guild.create_text_channel("–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç")
                    except:
                        await inter.delete_original_message()
                        return await inter.send(embed=embx, ephemeral=True)

                try:
                    await channe.set_permissions(
                        inter.guild.default_role, send_messages=False,
                        add_reactions=False
                        )
                except:
                    try:
                        await channe.send(embed=emb1, delete_after=30)
                    except:
                        await inter.delete_original_message()
                        return await inter.send(embed=embx, ephemeral=True)
                try:
                    await channe.send(embed=emb, view=buttons)
                except:
                    await inter.delete_original_message()
                    return await inter.send(embed=embx, ephemeral=True)

                self.guild.update_one(
                    {"_id": inter.guild.id}, {"$set": {'channel': int(channe.id)}}
                    )
            else:
                view = disnake.ui.View()
                view.add_item(MyView.MyViewx())
                await inter.edit_original_response(view=view)
        elif a == "select2":
            buttons = disnake.ui.View()
            buttons.add_item(
                disnake.ui.Button(
                    label='–°—Ç–∞—Ä—Ç', emoji='<:321:1095340832711770222>',
                    style=disnake.ButtonStyle.gray,
                    custom_id="startV2"
                    )
                )
            buttons.add_item(
                disnake.ui.Button(
                    label='–°—Ç–æ–ø', emoji='<:123:1095340836826394644>',
                    style=disnake.ButtonStyle.gray,
                    custom_id="stopV2"
                    )
                )
            buttons.add_item(
                disnake.ui.Button(
                    label='–ò–Ω—Ñ–æ', emoji='<:456:1095340827896725504>',
                    style=disnake.ButtonStyle.gray,
                    custom_id="infoV2"
                    )
                )
            buttons.add_item(
                disnake.ui.Button(
                    label='–†–µ–∂–∏–º', emoji='‚öô',
                    style=disnake.ButtonStyle.gray,
                    custom_id="mode"
                    )
                )

            emb = embed_generator()
            emb.set_image(file=disnake.File('files/banner.png'))
            channel = inter.guild.get_channel(int(inter.values[0]))
            try:
                await channel.send(embed=emb, view=buttons)
                try:
                    await channel.set_permissions(
                        inter.guild.default_role, send_messages=False, add_reactions=False
                        )
                except:
                    emb = embed_generator(
                        description=f"–†–µ–∫–æ–º–µ–Ω–¥—É—é –æ—Ç–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!\n"
                                    f"–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥",
                        author_name="–°–æ–≤–µ—Ç", icon_url=self.bot.user.avatar
                        )

                    await channel.send(embed=emb, delete_after=30)
            except:
                emb = embed_generator(
                    description=f"–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤–∞ –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª.",
                    author_name="–û—à–∏–±–∫–∞", icon_url=self.bot.user.avatar
                    )

                await inter.send(embed=emb, ephemeral=True)
            else:
                self.guild.update_one(
                    {"_id": inter.guild.id}, {"$set": {'channel': int(channel.id)}}
                    )
                embx = embed_generator(
                    description=f"*–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª–µ* {channel.mention}",
                    author_name="–£—Å–ø–µ—à–Ω–æ!", icon_url=self.bot.user.avatar
                    )

                await inter.delete_original_message()
                await inter.send(embed=embx, ephemeral=True)

    @commands.slash_command(name="unsetup", description="–û—Ç–∫–ª—é—á–∏—Ç—å –∞–Ω–æ–Ω-—á–∞—Ç", dm_permission=False)
    @commands.default_member_permissions(administrator=True)
    async def unsetup(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except:
            pass
        try:
            channel = self.guild.find_one({'_id': inter.guild.id})['channel']
        except:
            embx = embed_generator(
                description=f"–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –Ω–µ –±—ã–ª –≤–∫–ª—é—á–µ–Ω!",
                author_name="–û—à–∏–±–∫–∞", icon_url=self.bot.user.avatar
                )

            return await inter.send(embed=embx)

        # noinspection PyUnusedLocal
        class Buttons(disnake.ui.View):
            def __init__(self, bot=self.bot):
                super().__init__(timeout=30)
                self.bot = bot
                self.cluster = MongoClient(config.config["database"])
                anon = "AnonChatDev" if config.dev else "AnonChat"
                self.guild = self.cluster[anon].guilds

            async def on_timeout(self):
                try:
                    await inter.delete_original_message()
                except:
                    pass

            @disnake.ui.button(label='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', emoji='‚úÖ', style=disnake.ButtonStyle.gray)
            async def conf(self, button: disnake.ui.Button, inter: disnake.CommandInteraction):
                try:
                    await inter.response.defer(ephemeral=True)
                except HTTPException:
                    pass
                self.guild.update_one({"_id": inter.guild.id}, {"$set": {"channel": 0}})
                try:
                    ch = inter.guild.get_channel(int(channel))
                    await ch.delete()
                except:
                    embx = embed_generator(
                        description=f"–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω, –Ω–æ –±–æ—Ç –Ω–µ —Å–º–æ–≥ —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª.",
                        author_name="–û—à–∏–±–∫–∞!", icon_url=self.bot.user.avatar
                        )
                    try:
                        await inter.delete_original_message()
                        await inter.send(embed=embx, ephemeral=True)
                    except:
                        pass
                else:
                    embx = embed_generator(
                        description=f"–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω.",
                        author_name="–£—Å–ø–µ—à–Ω–æ!", icon_url=self.bot.user.avatar
                        )
                    try:
                        await inter.delete_original_message()
                        await inter.send(embed=embx, ephemeral=True)
                    except:
                        pass

            @disnake.ui.button(
                label='–û—Ç–∫–ª—é—á–∏—Ç—å –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è', emoji='‚ö†', style=disnake.ButtonStyle.gray
                )
            async def dell(self, button: disnake.ui.Button, inter: disnake.CommandInteraction):
                try:
                    await inter.response.defer(ephemeral=True)
                except HTTPException:
                    pass
                self.guild.update_one({"_id": inter.guild.id}, {"$set": {"channel": 0}})
                ch = inter.guild.get_channel(int(channel))

                embx = embed_generator(
                    description=f"–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –æ—Ç–∫–ª—é—á–µ–Ω.",
                    author_name="–£—Å–ø–µ—à–Ω–æ!", icon_url=self.bot.user.avatar
                    )

                if ch is not None:
                    try:
                        await ch.purge(limit=None, check=lambda m: m.author == self.bot.user)
                    except:
                        pass
                try:
                    await inter.delete_original_message()
                    await inter.send(embed=embx, ephemeral=True)
                except:
                    pass

        try:
            ch = inter.guild.get_channel(int(channel))
        except:
            ch = None
        if ch is not None:
            embed = embed_generator(
                description=f"*–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –±–æ—Ç* **—É–¥–∞–ª–∏—Ç** *–∫–∞–Ω–∞–ª* **{ch.mention},** *–≤—ã —É–≤–µ—Ä–µ–Ω—ã?*",
                author_name="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è", icon_url=self.bot.user.avatar
                )
        else:
            embed = embed_generator(
                description=f"*–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –±–æ—Ç* **—É–¥–∞–ª–∏—Ç** *–∫–∞–Ω–∞–ª —Å –∞–Ω–æ–Ω–∏–º–Ω—ã–º —á–∞—Ç–æ–º* *–≤—ã —É–≤–µ—Ä–µ–Ω—ã?*",
                author_name="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è", icon_url=self.bot.user.avatar
                )
        await inter.send(embed=embed, view=Buttons())

    @commands.slash_command(
        name='send',
        description="",
        dm_permission=True
        )
    async def sendpr(self, inter):
        pass

    @sendpr.sub_command(
        name='profile',
        description=f'–û—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞—à–µ–º—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å'
        )
    async def sendprofile(self, inter):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        post_stats(id=inter.author.id)
        try:
            comp = self.collection.find_one({'_id': inter.author.id})['comp']
        except:
            comp = 0
        if comp is None or comp == 0:
            emb = embed_generator(
                description="–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∞–Ω–æ–Ω–∏–º–Ω–æ–º —á–∞—Ç–µ.",
                author_name="–û—à–∏–±–∫–∞!", icon_url=self.bot.user.avatar
                )
            await inter.send(embed=emb, ephemeral=True)
        else:
            name = self.stats.find_one({'_id': inter.author.id})['name']
            age = self.stats.find_one({'_id': inter.author.id})['age']
            gender = self.stats.find_one({'_id': inter.author.id})['gender']
            aboutme = self.stats.find_one({'_id': inter.author.id})['aboutme']

            emb = embed_generator(
                description=f"–ò–º—è **{name}**\n"
                            f"–í–æ–∑—Ä–∞—Å—Ç **{'–ù–µ —É–∫–∞–∑–∞–Ω' if age == 0 else age}**\n"
                            f"–ü–æ–ª **{gender}**\n\n"
                            f"–û–±–æ –º–Ω–µ\n`{aboutme}`\n\n"
                            f"*–ï–≥–æ –Ω–∏–∫:* **[{inter.author.name}](https://discordapp.com/users/{inter.author.id}/)**\n"
                            f"*–ü–∏–Ω–≥:* {inter.author.mention}",
                author_name="–í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å", icon_url=self.bot.user.avatar
                )

            emb.set_thumbnail(url=inter.author.avatar)

            member = await self.bot.getch_user(comp)
            if member is None:
                try:
                    guild = self.collection.find_one({'_id': comp})['guild']
                    g = await self.bot.fetch_guild(guild)
                    member = await g.fetch_member(comp)
                except:
                    member = None
            try:
                await member.send(embed=emb)
            except:
                emb = embed_generator(
                    description="–Ø –Ω–µ —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.",
                    author_name="–û—à–∏–±–∫–∞!", icon_url=self.bot.user.avatar
                    )
                await inter.send(embed=emb, ephemeral=True)
            else:
                emb = embed_generator(
                    description="–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å.",
                    author_name="–£—Å–ø–µ—à–Ω–æ!", icon_url=self.bot.user.avatar
                    )
                await inter.send(embed=emb, ephemeral=True)

    @commands.slash_command(
        name="profile",
        description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–∞—Å –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω)",
        dm_permission=True,
        options=[
            Option("member", "–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", OptionType.user, required=False),
            ]
        )
    async def profile(self, inter, member=None):
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        if member is None:
            member = inter.author
        post_stats(id=member.id)

        messages = self.stats.find_one({'_id': member.id})['messages']
        chats = self.stats.find_one({'_id': member.id})['chats']
        try:
            rep = self.stats.find_one({'_id': member.id})['rep']
        except:
            rep = 0
        if rep >= 0:
            emoji = "üëç"
        else:
            emoji = "üëé"

        class MyModal(disnake.ui.Modal):
            def __init__(self):
                # –î–µ—Ç–∞–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ –µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                self.cluster = MongoClient(config.config["database"])
                anon = "AnonChatDev" if config.dev else "AnonChat"
                self.stats = self.cluster[anon].stats

                components = [
                    disnake.ui.TextInput(
                        label="–ò–º—è",
                        placeholder="–û–ª–µ–≥",
                        custom_id="name",
                        style=disnake.TextInputStyle.short,
                        max_length=16,
                        min_length=2
                        ),
                    disnake.ui.TextInput(
                        label="–í–æ–∑—Ä–∞—Å—Ç",
                        placeholder="14+",
                        custom_id="age",
                        style=disnake.TextInputStyle.single_line,
                        max_length=2,
                        min_length=2
                        ),
                    disnake.ui.TextInput(
                        label="–ü–æ–ª",
                        placeholder="–ú/–ñ",
                        custom_id="gender",
                        style=disnake.TextInputStyle.single_line,
                        max_length=1,
                        min_length=1
                        ),
                    disnake.ui.TextInput(
                        label="–û–±–æ –º–Ω–µ",
                        placeholder="–°–∞–Ω—è, —Ä–∞–∑—Ä–∞–± –±–æ—Ç–∞, –º–æ–ª–æ–¥–µ—Ü –≤ –æ–±—â–µ–º",
                        custom_id="aboutme",
                        style=disnake.TextInputStyle.single_line,
                        max_length=75,
                        min_length=10
                        )
                    ]
                super().__init__(
                    title="–ü—Ä–æ—Ñ–∏–ª—å",
                    custom_id="profile",
                    components=components,
                    )

            async def callback(self, interr: disnake.ModalInteraction):
                for key, value in interr.text_values.items():
                    if key.capitalize() == "Name":
                        self.stats.update_one({"_id": member.id}, {"$set": {'name': value}})
                    if key.capitalize() == "Age":
                        try:
                            value = int(value)
                        except:
                            pass
                        else:
                            self.stats.update_one({"_id": member.id}, {"$set": {'age': value}})
                    if key.capitalize() == "Gender":
                        if value.lower() == "–º":
                            self.stats.update_one(
                                {"_id": member.id}, {"$set": {'gender': "–ú—É–∂—Å–∫–æ–π"}}
                                )
                        elif value.lower() == "–∂":
                            self.stats.update_one(
                                {"_id": member.id}, {"$set": {'gender': "–ñ–µ–Ω—Å–∫–∏–π"}}
                                )
                    if key.capitalize() == "Aboutme":
                        self.stats.update_one({"_id": member.id}, {"$set": {'aboutme': value}})

                emb = embed_generator(
                    description="–í—ã –æ–±–Ω–æ–≤–∏–ª–∏ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å",
                    author_name="–£—Å–ø–µ—à–Ω–æ!", icon_url=member.avatar
                    )

                name = self.stats.find_one({'_id': member.id})['name']
                age = self.stats.find_one({'_id': member.id})['age']
                gender = self.stats.find_one({'_id': member.id})['gender']
                aboutme = self.stats.find_one({'_id': member.id})['aboutme']

                emb1 = embed_generator(
                    author_name=f"–ü—Ä–æ—Ñ–∏–ª—å {member.name}", icon_url=member.avatar
                    )
                emb1.add_field(name="–ò–º—è:", value=f"`{name}`", inline=True)
                emb1.add_field(
                    name="–í–æ–∑—Ä–∞—Å—Ç:", value=f"`{'–ù–µ —É–∫–∞–∑–∞–Ω' if age == 0 else age}`", inline=True
                    )
                emb1.add_field(name="–ü–æ–ª:", value=f"`{gender}`", inline=True)
                emb1.add_field(name="–û–±–æ –º–Ω–µ:", value=f"`{aboutme}`", inline=False)
                emb1.add_field(name="–ë—ã–ª –≤ —á–∞—Ç–∞—Ö:", value=f"`{chats}`", inline=True)
                emb1.add_field(name="–ù–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–π:", value=f"`{messages}`", inline=True)
                emb1.add_field(name="–†–µ–ø—É—Ç–∞—Ü–∏—è:", value=f"`{rep}`{emoji}", inline=True)

                await inter.edit_original_message(embed=emb1, view=None)
                await interr.followup.send(embed=emb, ephemeral=True)

        # noinspection PyUnusedLocal
        class Buttons(disnake.ui.View):
            def __init__(self):
                super().__init__(timeout=120)

            async def on_timeout(self):
                try:
                    await inter.delete_original_message()
                except:
                    pass

            @disnake.ui.button(emoji="‚öô", label="–ù–∞—Å—Ç—Ä–æ–∏—Ç—å", style=disnake.ButtonStyle.grey)
            async def previous(self, button, inter):
                await inter.response.send_modal(MyModal())

        name = self.stats.find_one({'_id': member.id})['name']
        age = self.stats.find_one({'_id': member.id})['age']
        gender = self.stats.find_one({'_id': member.id})['gender']
        aboutme = self.stats.find_one({'_id': member.id})['aboutme']

        emb1 = embed_generator(
            author_name=f"–ü—Ä–æ—Ñ–∏–ª—å {member.name}", icon_url=member.avatar,
            )
        emb1.add_field(name="–ò–º—è:", value=f"`{name}`", inline=True)
        emb1.add_field(name="–í–æ–∑—Ä–∞—Å—Ç:", value=f"`{'–ù–µ —É–∫–∞–∑–∞–Ω' if age == 0 else age}`", inline=True)
        emb1.add_field(name="–ü–æ–ª:", value=f"`{gender}`", inline=True)
        emb1.add_field(name="–û–±–æ –º–Ω–µ:", value=f"`{aboutme}`", inline=False)
        emb1.add_field(name="–ë—ã–ª –≤ —á–∞—Ç–∞—Ö:", value=f"`{chats}`", inline=True)
        emb1.add_field(name="–ù–∞–ø–∏—Å–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–π:", value=f"`{messages}`", inline=True)
        emb1.add_field(name="–†–µ–ø—É—Ç–∞—Ü–∏—è:", value=f"`{rep}`{emoji}", inline=True)

        if member == inter.author:
            await inter.send(embed=emb1, view=Buttons())
        else:
            await inter.send(embed=emb1)

    @commands.slash_command(
        name="bug", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç –æ–± –æ—à–∏–±–∫–µ –≤ –±–æ—Ç–µ", dm_permission=True
        )
    async def bug(
            self, inter, text: str = commands.Param(
                name="–ø—Ä–æ–±–ª–µ–º–∞",
                description="–ø–∏—à–∏—Ç–µ, –≤ —á—ë–º –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –±–∞–≥ –∏ –∫–∞–∫ –æ–Ω –ø–æ–ª—É—á–∞–µ—Ç—Å—è",
                min_length=50
                ),
            att: disnake.Attachment = commands.Param(
                name="—Å–∫—Ä–∏–Ω—à–æ—Ç",
                description="–ü–æ–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–∫—Ü–∏—é –æ—Ç –±–æ—Ç–∞ –ø—Ä–∏ –±–∞–≥–µ"
                )
            ):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞—à—É –∂–∞–ª–æ–±—É"""
        try:
            await inter.response.defer(ephemeral=True)
        except HTTPException:
            pass
        emb1 = embed_generator(
            description=f'{inter.author.mention}, –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å—Ç—Ä–∞–Ω–∏—Ç —ç—Ç—É –æ—à–∏–±–∫—É, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å!',
            author_name="–û—Ç—á—ë—Ç –ø–æ –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!", icon_url=self.bot.user.avatar
            )

        await inter.send(embed=emb1)
        emb = embed_generator(
            description=f"**–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:** {inter.author}\n**ID:** {inter.author.id}\n**–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:**\n\n`{text}`",
            author_name="–ù–∞—à–ª–∏ –Ω–æ–≤—ã–π –±–∞–≥!", icon_url=self.bot.user.avatar
            )
        emb.set_image(url=att)
        guild = await self.bot.fetch_guild(config.config["guild"])
        channel = await guild.fetch_channel(1180441513700888721)
        await channel.send(content=f"{inter.author.mention}", embed=emb)


def setup(bot):
    bot.add_cog(Slash(bot))
