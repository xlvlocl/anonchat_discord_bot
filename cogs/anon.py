from ..init import disnake, commands, MongoClient, config, search_user, stop, post_stats, embed_generator


class Anon(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.cluster = MongoClient(config.config["database"])
        anon = "AnonChatDev" if config.dev else "AnonChat"
        self.collection = self.cluster[anon].anon
        self.search = self.cluster[anon].search
        self.stats = self.cluster[anon].stats
        self.reports = self.cluster[anon].reports
        self.economy = self.cluster[anon].economy

    @commands.Cog.listener()
    async def on_button_click(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id == "startV2":
            try:
                await inter.response.defer(ephemeral=True)
            except:
                pass
            try:
                mode = self.stats.find_one({"_id": inter.author.id})["mode"]
            except:
                mode = 0

            await search_user(inter, self.bot, frombtn=True, locale=True if mode == 1 else False)

        elif inter.component.custom_id == "stopV2":
            try:
                await inter.response.defer(ephemeral=True)
            except:
                pass
            try:
                mode = self.stats.find_one({"_id": inter.author.id})["mode"]
            except:
                mode = 0

            await stop(inter, self.bot, locale=True if mode == 1 else False)

        elif inter.component.custom_id == "infoV2":
            try:
                await inter.response.defer()
            except:
                pass
            emb = embed_generator(
                title="",
                description="**–ü—Ä–∞–≤–∏–ª–∞:** """"\n\n<:to4ka:1213510909922902057> **1)** *–ò–∑–ª–∏—à–Ω—è—è –Ω–µ–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω–∞—è –ª–µ–∫—Å–∏–∫–∞*\n<a:znak:1213510911298379787> –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n\n<:to4ka:1213510909922902057> **2)** *–û—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞*\n<a:znak:1213510911298379787> –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ\n\n<:to4ka:1213510909922902057> **3)** *–§–∏—à–∏–Ω–≥, –ø–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–µ—Å—Ç–≤–æ, –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ –≤ –ª—é–±—ã—Ö –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è—Ö*\n<a:znak:1213510911298379787> –ë–∞–Ω\n\n<:to4ka:1213510909922902057> **4)** *–ü–æ–¥—Å—Ç—Ä–µ–∫–∞—Ç–µ–ª—å—Å—Ç–≤–æ –Ω–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–æ–ø—Ä–∞–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∫–∞–∫ –≤ —Ä–∞–º–∫–∞—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Discord —Ç–∞–∫ –∏ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏*\n<a:znak:1213510911298379787> –ë–∞–Ω\n\n<:to4ka:1213510909922902057> **5)** *–ù–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–π –ø–∏–∞—Ä/—Ä–µ–∫–ª–∞–º–∞*\n<a:znak:1213510911298379787> –ë–∞–Ω\n\n<:to4ka:1213510909922902057> **6)** *–ü—Ä–æ–ø–∞–≥–∞–Ω–¥–∞ —á–µ–≥–æ –±—ã —Ç–æ –Ω–∏ –±—ã–ª–æ, –±—É–¥—å —Ç–æ –∏–¥–µ–æ–ª–æ–≥–∏—è, –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞ –∏ —Ç.–¥.*\n<a:znak:1213510911298379787> –ë–∞–Ω\n\n<:to4ka:1213510909922902057> **7)** *–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —à–æ–∫–∏—Ä—É—é—â–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç, –∫–æ–Ω—Ç–µ–Ω—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —è—Ä–∫–∏–µ –≤—Å–ø—ã—à–∫–∏, 
                —Å—Ü–µ–Ω—ã –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ–≥–æ –∏/–∏–ª–∏ –∑–∞–≤—É–∞–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–µ–∫—Å—É–∞–ª—å–Ω–æ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, —Å—Ü–µ–Ω—ã –Ω–∞—Å–∏–ª–∏—è –ë–ï–ó –°–û–ì–õ–ê–°–ò–Ø –°–û–ë–ï–°–ï–î–ù–ò–ö–ê*\n<a:znak:1213510911298379787> –ë–∞–Ω\n\n<:to4ka:1213510909922902057> **8)** *–î–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏—è –ø–æ –≥–µ–Ω–¥–µ—Ä–Ω–æ–º—É, —Ä–∞—Å–æ–≤–æ–º—É, —Ä–µ–ª–∏–≥–∏–æ–∑–Ω–æ–º—É –∏–ª–∏ –ª—é–±–æ–º—É –¥—Ä—É–≥–æ–º—É –ø—Ä–∏–∑–Ω–∞–∫—É*\n<a:znak:1213510911298379787> –ë–∞–Ω""""\n\n"
                            "\n–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞—Ö–æ–¥–∏ –Ω–∞ [—Å–∞–ø–ø–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä](https://discord.gg/YBzKe7vCYY)\n\n"
                            "> üòà –û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Å–µ—Ä–≤–µ—Ä: [Suck Or Play](https://discord.gg/abnRQzebdF)",
                author_name="–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∞–Ω–æ–Ω–∏–º–Ω–æ–º—É —á–∞—Ç—É", icon_url=self.bot.user.avatar
                )

            await inter.send(embed=emb, ephemeral=True)

        elif inter.component.custom_id == "mode":
            # 0 - global search
            # 1 - local search
            # 2 - group search

            post_stats(id=inter.author.id)

            try:
                mode = self.stats.find_one({"_id": inter.author.id})["mode"]
            except:
                mode = 0
            mode_str = "–ì–ª–æ–±–∞–ª—å–Ω—ã–π" if mode == 0 else "–õ–æ–∫–∞–ª—å–Ω—ã–π" if mode == 1 else "–ì—Ä—É–ø–ø–æ–≤–æ–π"
            emb = embed_generator(
                description=f"**–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º**: `{mode_str}`\n\n"
                            "**–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫** - –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ —Å **–ª—é–±–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞**\n"
                            "**–õ–æ–∫–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫** - –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ —Å **—Ç–µ–∫—É—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞**\n"
                            "**–ì—Ä—É–ø–ø–æ–≤–æ–π –ø–æ–∏—Å–∫** - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. \n\n"
                            "–ò–¥–µ—é –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞ [—Å–∞–ø–ø–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–µ](https://discord.gg/YBzKe7vCYY)\n",
                author_name="–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ | –ë–ï–¢–ê", icon_url=self.bot.user.avatar
                )

            buttons = disnake.ui.View()

            buttons.add_item(disnake.ui.Button(label="–ì–ª–æ–±–∞–ª—å–Ω—ã–π", custom_id="global_search", style=disnake.ButtonStyle.gray))
            buttons.add_item(disnake.ui.Button(label="–õ–æ–∫–∞–ª—å–Ω—ã–π", custom_id="local_search", style=disnake.ButtonStyle.gray))
            buttons.add_item(disnake.ui.Button(label="–ì—Ä—É–ø–ø–æ–≤–æ–π", custom_id="group_search", style=disnake.ButtonStyle.gray, disabled=True))

            await inter.send(embed=emb, view=buttons, ephemeral=True)

        elif inter.component.custom_id in ["global_search", "local_search", "group_search"]:
            try:
                await inter.response.defer()
            except:
                pass

            post_stats(id=inter.author.id)

            try:
                mode = self.stats.find_one({"_id": inter.author.id})["mode"]
            except:
                mode = 0

            if inter.component.custom_id == "global_search":
                if mode == 0:
                    emb = embed_generator(author_name="–£ –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —ç—Ç–æ—Ç —Ä–µ–∂–∏–º!", icon_url=self.bot.user.avatar)
                    return await inter.send(embed=emb, ephemeral=True)
                self.stats.update_one({"_id": inter.author.id}, {"$set": {"mode": 0}})
                mode = 0
            elif inter.component.custom_id == "local_search":
                if mode == 1:
                    emb = embed_generator(author_name="–£ –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —ç—Ç–æ—Ç —Ä–µ–∂–∏–º!", icon_url=self.bot.user.avatar)
                    return await inter.send(embed=emb, ephemeral=True)
                self.stats.update_one({"_id": inter.author.id}, {"$set": {"mode": 1}})
                mode = 1
            elif inter.component.custom_id == "group_search":
                if mode == 2:
                    emb = embed_generator(author_name="–£ –≤–∞—Å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —ç—Ç–æ—Ç —Ä–µ–∂–∏–º!", icon_url=self.bot.user.avatar)
                    return await inter.send(embed=emb, ephemeral=True)
                self.stats.update_one({"_id": inter.author.id}, {"$set": {"mode": 2}})
                mode = 2
            mode_str = "–ì–ª–æ–±–∞–ª—å–Ω—ã–π" if mode == 0 else "–õ–æ–∫–∞–ª—å–Ω—ã–π" if mode == 1 else "–ì—Ä—É–ø–ø–æ–≤–æ–π"
            emb = embed_generator(
                description=f"**–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º**: `{mode_str}`\n\n"
                            "**–ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫** - –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ —Å **–ª—é–±–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞**\n"
                            "**–õ–æ–∫–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫** - –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ —Å **—Ç–µ–∫—É—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞**\n"
                            "**–ì—Ä—É–ø–ø–æ–≤–æ–π –ø–æ–∏—Å–∫** - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. \n\n"
                            "–ò–¥–µ—é –ø–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–∞ [—Å–∞–ø–ø–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–µ](https://discord.gg/YBzKe7vCYY)\n",
                author_name="–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ | –ë–ï–¢–ê", icon_url=self.bot.user.avatar
                )

            buttons = disnake.ui.View()

            buttons.add_item(disnake.ui.Button(label="–ì–ª–æ–±–∞–ª—å–Ω—ã–π", custom_id="global_search", style=disnake.ButtonStyle.gray))
            buttons.add_item(disnake.ui.Button(label="–õ–æ–∫–∞–ª—å–Ω—ã–π", custom_id="local_search", style=disnake.ButtonStyle.gray))
            buttons.add_item(disnake.ui.Button(label="–ì—Ä—É–ø–ø–æ–≤–æ–π", custom_id="group_search", style=disnake.ButtonStyle.gray, disabled=True))

            await inter.edit_original_message(embed=emb, view=buttons)

        elif inter.component.custom_id == "like":
            try:
                await inter.response.defer()
            except:
                pass
            try:
                last_comp = self.stats.find_one({'_id': inter.author.id})['last_comp']
            except:
                pass
            else:
                buttons = disnake.ui.View()
                buttons.add_item(
                    disnake.ui.Button(
                        label='', emoji='üëç', style=disnake.ButtonStyle.gray, custom_id="like",
                        disabled=True
                        )
                    )
                buttons.add_item(
                    disnake.ui.Button(
                        label='', emoji='üëé', style=disnake.ButtonStyle.gray, custom_id="dlike",
                        disabled=True
                        )
                    )
                buttons.add_item(
                    disnake.ui.Button(
                        label='', emoji='‚ö†', style=disnake.ButtonStyle.gray, custom_id="report"
                        )
                    )
                try:
                    likes = self.stats.find_one({'_id': last_comp})['rep']
                    self.stats.update_one({"_id": last_comp}, {"$set": {'rep': likes + 1}})
                except:
                    pass
                emb = embed_generator(
                    description=f"–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É –ª–∞–π–∫.",
                    author_name="–õ–∞–π–∫!", icon_url=self.bot.user.avatar
                    )
                await inter.edit_original_response(view=buttons)
                await inter.send(embed=emb)

        elif inter.component.custom_id == "dlike":
            try:
                await inter.response.defer()
            except:
                pass
            try:
                last_comp = self.stats.find_one({'_id': inter.author.id})['last_comp']
            except:
                pass
            else:
                buttons = disnake.ui.View()
                buttons.add_item(
                    disnake.ui.Button(
                        label='', emoji='üëç', style=disnake.ButtonStyle.gray, custom_id="like",
                        disabled=True
                        )
                    )
                buttons.add_item(
                    disnake.ui.Button(
                        label='', emoji='üëé', style=disnake.ButtonStyle.gray, custom_id="dlike",
                        disabled=True
                        )
                    )
                buttons.add_item(
                    disnake.ui.Button(
                        label='', emoji='‚ö†', style=disnake.ButtonStyle.gray, custom_id="report"
                        )
                    )
                try:
                    likes = self.stats.find_one({'_id': last_comp})['rep']
                    self.stats.update_one({"_id": last_comp}, {"$set": {'rep': likes - 1}})
                except:
                    pass
                emb = embed_generator(
                    description=f"–í—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É –¥–∏–∑–ª–∞–π–∫.",
                    author_name="–î–∏–∑–ª–∞–π–∫!", icon_url=self.bot.user.avatar
                    )
                await inter.edit_original_response(view=buttons)
                await inter.send(embed=emb)
        elif inter.component.custom_id == "report":
            bot = self.bot
            id = self.stats.find_one({'_id': inter.author.id})['last_comp']
            num = self.reports.find_one({'_id': "super"})['num']

            class MyModal(disnake.ui.Modal):
                def __init__(self):
                    # –î–µ—Ç–∞–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏ –µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                    self.bot = bot
                    self.cluster = MongoClient(config.config["database"])
                    anon = "AnonChatDev" if config.dev else "AnonChat"
                    self.reports = self.cluster[anon].reports

                    components = [
                        disnake.ui.TextInput(
                            label="–ü—Ä–∏—á–∏–Ω–∞ –∂–∞–ª–æ–±—ã",
                            placeholder="–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è –≤ –º–æ–π –∞–¥—Ä–µ—Å",
                            custom_id="–ü—Ä–∏—á–∏–Ω–∞",
                            style=disnake.TextInputStyle.short,
                            max_length=250,
                            min_length=20
                            ),
                        disnake.ui.TextInput(
                            label="–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∫—Ä–∏–Ω —Å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º",
                            placeholder="https://...",
                            custom_id="–ü—Ä—É—Ñ",
                            style=disnake.TextInputStyle.short,
                            max_length=250,
                            min_length=10
                            )
                        ]
                    super().__init__(
                        title="–ñ–∞–ª–æ–±–∞",
                        custom_id="create_tag",
                        components=components,
                        )

                async def callback(self, interr: disnake.ModalInteraction):
                    desc = ''
                    link = ''
                    for key, value in interr.text_values.items():
                        if key.capitalize() == "–ü—Ä—É—Ñ":
                            link = value
                        else:
                            desc += ''.join(f'\n `{key.capitalize()}`: {value}')

                    emb = embed_generator(
                        description=f"–í—ã –ø–æ–∂–∞–ª–æ–≤–∞–ª–∏—Å—å –Ω–∞ –≤–∞—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∂–∞–ª–æ–±—ã –ø—Ä–∏–¥—ë—Ç –≤–∞–º –∑–¥–µ—Å—å.",
                        author_name=f"–ñ–∞–ª–æ–±–∞ #{num + 1}", icon_url=self.bot.user.avatar
                        )

                    await interr.send(embed=emb)

                    try:
                        embed = disnake.Embed(
                            description=desc,
                            color=disnake.Color.orange(),
                            )
                        embed.set_footer(
                            text=f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {interr.author} | {interr.author.id}",
                            icon_url=interr.author.avatar
                            )
                        embed.set_author(name=f"–ñ–∞–ª–æ–±–∞ #{num + 1}", icon_url=self.bot.user.avatar)
                        embed.set_image(link)
                        buttons = disnake.ui.View()
                        buttons.add_item(
                            disnake.ui.Button(
                                label='–ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å', style=disnake.ButtonStyle.gray,
                                custom_id=f"warn,{id},{interr.author.id},{num + 1}"
                                )
                            )
                        buttons.add_item(
                            disnake.ui.Button(
                                label='–ó–∞–±–∞–Ω–∏—Ç—å', style=disnake.ButtonStyle.gray,
                                custom_id=f"ban,{id},{interr.author.id},{num + 1}"
                                )
                            )
                        buttons.add_item(
                            disnake.ui.Button(
                                label='–ü–æ–Ω—è—Ç—å –∏ –ø—Ä–æ—Å—Ç–∏—Ç—å', style=disnake.ButtonStyle.gray,
                                custom_id=f"dismiss,{id},{interr.author.id},{num + 1}"
                                )
                            )

                        msg = await (self.bot.get_guild(config.config["guild"]).get_channel(
                            config.config["channel3"]
                            ).
                                     send(embed=embed, view=buttons))
                    except:
                        embedd = disnake.Embed(
                            description=desc,
                            color=disnake.Color.orange(),
                            )
                        embedd.set_author(name=f"–ñ–∞–ª–æ–±–∞ #{num + 1}", icon_url=self.bot.user.avatar)
                        embedd.set_footer(
                            text=f"–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {interr.author} | {interr.author.id}",
                            icon_url=interr.author.avatar
                            )
                        buttons = disnake.ui.View()
                        buttons.add_item(
                            disnake.ui.Button(
                                label='–ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å', style=disnake.ButtonStyle.gray,
                                custom_id=f"warn,{id},{interr.author.id},{num + 1}"
                                )
                            )
                        buttons.add_item(
                            disnake.ui.Button(
                                label='–ó–∞–±–∞–Ω–∏—Ç—å', style=disnake.ButtonStyle.gray,
                                custom_id=f"ban,{id},{interr.author.id},{num + 1}"
                                )
                            )
                        buttons.add_item(
                            disnake.ui.Button(
                                label='–ü–æ–Ω—è—Ç—å –∏ –ø—Ä–æ—Å—Ç–∏—Ç—å', style=disnake.ButtonStyle.gray,
                                custom_id=f"dismiss,{id},{interr.author.id},{num + 1}"
                                )
                            )
                        msg = await self.bot.get_guild(config.config["guild"]).get_channel(config.config["channel3"]).send(embed=embedd, view=buttons)
                    self.reports.update_one({"_id": "super"}, {"$set": {'num': num + 1}})

                    buttons = disnake.ui.View()
                    buttons.add_item(
                        disnake.ui.Button(
                            label='', emoji='üëç', style=disnake.ButtonStyle.gray, custom_id="like",
                            disabled=True
                            )
                        )
                    buttons.add_item(
                        disnake.ui.Button(
                            label='', emoji='üëé', style=disnake.ButtonStyle.gray, custom_id="dlike",
                            disabled=True
                            )
                        )
                    buttons.add_item(
                        disnake.ui.Button(
                            label='', emoji='‚ö†', style=disnake.ButtonStyle.gray, custom_id="report",
                            disabled=True
                            )
                        )

                    await inter.edit_original_response(view=buttons)
                    post = {
                        "_id": num + 1,
                        "reason": desc,
                        'msg_id': msg.id
                        }
                    self.reports.insert_one(post)

            await inter.response.send_modal(MyModal())
        elif inter.component.custom_id == "settings":
            try:
                await inter.response.defer()
            except:
                pass

            class MyViewx(disnake.ui.StringSelect):
                def __init__(self):
                    self.cluster = MongoClient(config.config["database"])
                    anon = "AnonChatDev" if config.dev else "AnonChat"
                    self.eco = self.cluster[anon].economy
                    mem = self.eco.find_one({"_id": inter.author.id})
                    super().__init__(
                        placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç",
                        options=[disnake.SelectOption(label=i) for i in mem['items']],
                        min_values=1,
                        max_values=1,
                        custom_id="choice"
                        )

            view = disnake.ui.View()
            view.add_item(MyViewx())
            await inter.send(view=view, ephemeral=True)
        elif inter.component.custom_id == "block":
            try:
                await inter.response.defer()
            except:
                pass
            self.stats.update_one({"_id": inter.author.id}, {"$set": {"block": 1}})
            buttons = disnake.ui.View()
            buttons.add_item(
                disnake.ui.Button(
                    label='–í–∫–ª—é—á–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å—ã', emoji="<:emoji_39:963680447609573396>",
                    style=disnake.ButtonStyle.gray, custom_id=f"unblock"
                    )
                )
            await inter.edit_original_message(view=buttons)
        elif inter.component.custom_id == "unblock":
            try:
                await inter.response.defer()
            except:
                pass
            self.stats.update_one({"_id": inter.author.id}, {"$set": {"block": 0}})
            buttons = disnake.ui.View()
            buttons.add_item(
                disnake.ui.Button(
                    label='–û—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å—ã', emoji="<:emoji_38:963679797991575572>",
                    style=disnake.ButtonStyle.gray, custom_id=f"block"
                    )
                )
            await inter.edit_original_message(view=buttons)
        elif inter.component.custom_id in ['start', 'stop', 'info']:
            try:
                await inter.response.defer()
            except:
                pass
            embed = embed_generator(
                description="–í —Å–≤—è–∑–∏ —Å –Ω–µ–¥–∞–≤–Ω–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π "
                            "</unsetup:1180457805069692933>, –∞ –∑–∞—Ç–µ–º </setup:1180457805069692931> –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞",
                author_name="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ", icon_url=self.bot.user.avatar
                )
            await inter.send(embed=embed, ephemeral=True)
        elif inter.component.custom_id.startswith("fight") or inter.component.custom_id.startswith("reject"):
            try:
                x = inter.component.custom_id.split(" ")
                status = x[0]
                msg_id = int(x[1])
                choice = int(x[2])
                authorr = int(x[3])
                comp = int(x[4])
                bet = int(x[5])
            except:
                return
            if status == "reject":
                author = await self.bot.getch_user(authorr)
                if author is None:
                    try:
                        guild = self.collection.find_one({"_id": authorr})["guild"]
                        g = await self.bot.fetch_guild(guild)
                        author = await g.fetch_member(authorr)
                    except:
                        author = None
                abs = f"`{str(bet)}" + "` <:__:1140642430887137361>" if bet > 0 else "`–Ω–∞ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫`\n"
                await inter.edit_original_message(
                    embed=embed_generator(
                        author_name=f"–í–∞—Å –≤—ã–∑–≤–∞–ª–∏ –Ω–∞ –∏–≥—Ä—É –≤ \n–∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥—É!",
                        description=f"**–°—Ç–∞–≤–∫–∞:** {abs}\n"
                                    f"**–°—Ç–∞—Ç—É—Å:** `–≤—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –≤—ã–∑–æ–≤ –Ω–∞ –∏–≥—Ä—É`",
                        icon_url=self.bot.user.avatar
                        ),
                    view=None
                    )
                if author is not None:
                    try:
                        id_c = self.collection.find_one({'_id': authorr})['channel']
                        channel = await self.bot.fetch_channel(id_c)
                    except:
                        channel = None
                    try:
                        message = await channel.fetch_message(msg_id)
                        abs = f"`{str(bet)}" + "` <:__:1140642430887137361>" if bet > 0 else "`–Ω–∞ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫`\n"
                        await message.edit(
                            embed=embed_generator(
                                author_name=f"–í—ã –≤—ã–∑–≤–∞–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –Ω–∞ –∏–≥—Ä—É –≤ \n–∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥—É!",
                                description=f"**–°—Ç–∞–≤–∫–∞:** {abs}\n"
                                            f"**–°—Ç–∞—Ç—É—Å:** `—Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Ç–∫–ª–æ–Ω–∏–ª –≤—ã–∑–æ–≤ –Ω–∞ –∏–≥—Ä—É`",
                                icon_url=self.bot.user.avatar
                                )
                            )
                    except:
                        pass
                self.economy.update_one({'_id': authorr}, {'$unset': {'in_game': ""}})
                self.economy.update_one({'_id': inter.author.id}, {'$unset': {'in_game': ""}})

            else:
                self.economy.update_one({'_id': inter.author.id}, {'$set': {'values': [msg_id, choice, authorr, comp, bet, inter.message.id]}})

                class MyViewx(disnake.ui.StringSelect):
                    def __init__(self):
                        super().__init__(
                            placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç",
                            options=[
                                disnake.SelectOption(
                                    label="–ö–∞–º–µ–Ω—å",
                                    ),
                                disnake.SelectOption(
                                    label="–ù–æ–∂–Ω–∏—Ü—ã",
                                    ),
                                disnake.SelectOption(
                                    label="–ë—É–º–∞–≥–∞",
                                    )
                                ],
                            min_values=1,
                            max_values=1,
                            custom_id="RPS"
                            )

                view = disnake.ui.View()
                view.add_item(MyViewx())
                await inter.send(view=view, ephemeral=True)
        else:
            try:
                x = inter.component.custom_id.split(",")
                verdict = x[0]
                podsuidmiy = int(x[1])
                istec = int(x[2])
                number_of_report = int(x[3])
            except:
                return

            podsuidmiy_member = await self.bot.getch_user(podsuidmiy)
            istec_member = await self.bot.getch_user(istec)

            if verdict == "warn":
                self.stats.update_one({"_id": podsuidmiy}, {"$inc": {"warns": 1}})
                warns = self.stats.find_one({"_id": podsuidmiy})['warns']
                reason = self.reports.find_one({"_id": number_of_report})['reason']
                msg_id = self.reports.find_one({"_id": number_of_report})['msg_id']
                if warns == 5:
                    self.stats.update_one({"_id": podsuidmiy}, {"$set": {"banned": 1}})
                    embed = disnake.Embed(
                        description="–í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã –∏–∑-–∑–∞ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∂–∞–ª–æ–± –≤ –≤–∞—à—É —Å—Ç–æ—Ä–æ–Ω—É.\n"
                                    "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –Ω–∞ [—Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏](https://discord.gg/YBzKe7vCYY) **AnonChat** –±–æ—Ç–∞.",
                        color=disnake.Color.red()
                        )
                    embed.set_author(name="–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ AnonChat", icon_url=self.bot.user.avatar)
                    await podsuidmiy_member.send(embed=embed)

                    try:
                        comp = self.collection.find_one({'_id': podsuidmiy})['comp']
                        member = await self.bot.getch_user(comp)
                        if member is None:
                            try:
                                guild = self.collection.find_one({'_id': comp})['guild']
                                g = await self.bot.fetch_guild(guild)
                                member = await g.fetch_member(int(comp))
                            except:
                                comp = 0
                                member = None
                    except:
                        comp = 0
                        member = None
                    if comp != 0 and member is not None:
                        lol = {"_id": podsuidmiy}
                        self.collection.delete_one(lol)
                        self.search.delete_one(lol)

                        lol = {"_id": comp}
                        self.collection.delete_one(lol)
                        self.search.delete_one(lol)

                        emb = embed_generator(
                            description="–í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–ª—É—á–∏–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –≤ **AnonChat**",
                            author_name="–ö–æ–Ω–µ—Ü —á–∞—Ç–∞", icon_url=self.bot.user.avatar
                            )
                        try:
                            m = await member.send(embed=emb)
                            self.stats.update_one({"_id": member.id}, {"$set": {'stop_m': m.id}})
                        except:
                            pass

                        emb1 = embed_generator(
                            description="–ß–∞—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –≤—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã\n",
                            author_name="–ö–æ–Ω–µ—Ü —á–∞—Ç–∞", icon_url=self.bot.user.avatar
                            )
                        try:
                            m1 = await podsuidmiy_member.send(embed=emb1)
                            self.stats.update_one(
                                {"_id": podsuidmiy_member.id}, {"$set": {'stop_m': m1.id}}
                                )
                        except:
                            pass

                    await istec_member.send(
                        embed=embed_generator(
                            description=f"*–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∂–∞–ª–æ–±—É* **#{number_of_report}**.\n**{reason}**\n*–í–µ—Ä–¥–∏–∫—Ç: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏ –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç –æ–±—â–∞—Ç—å—Å—è –≤* **AnonChat**.\n\n**–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ —Ö–æ—Ä–æ—à—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤ AnonChat!**",
                            author_name="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∂–∞–ª–æ–±–µ", icon_url=self.bot.user.avatar
                            )
                        )

                else:
                    await podsuidmiy_member.send(
                        embed=embed_generator(
                            description=f"–í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª.\n{reason}"
                                        "\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –Ω–∞ [—Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏](https://discord.gg/YBzKe7vCYY) **AnonChat** –±–æ—Ç–∞.",
                            author_name=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ {warns} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", icon_url=self.bot.user.avatar
                            )
                        )
                    await istec_member.send(
                        embed=embed_generator(
                            description=f"*–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∂–∞–ª–æ–±—É* **#{number_of_report}**.\n**{reason}**\n*–í–µ—Ä–¥–∏–∫—Ç: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ*\n\n**–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ —Ö–æ—Ä–æ—à—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤ AnonChat!**",
                            author_name="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∂–∞–ª–æ–±–µ", icon_url=self.bot.user.avatar
                            )
                        )
                await inter.edit_original_response(view=None)
                channel = self.bot.get_guild(config.config['guild']).get_channel(config.config["channel3"])
                msg = await channel.fetch_message(msg_id)

                await msg.reply(
                    embed=embed_generator(
                        description=f'{inter.author.mention} –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞—è–≤–∫—É.\n*–í–µ—Ä–¥–∏–∫—Ç:* **{podsuidmiy} / {podsuidmiy_member}** `{"–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥—ë–Ω" if warns + 1 <= 5 else "–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"}`\n\n*–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∂–∞–ª–æ–±—ã:* **{istec} / {istec_member}**',
                        author_name="–í–µ—Ä–¥–∏–∫—Ç –ø–æ –∂–∞–ª–æ–±–µ", icon_url=self.bot.user.avatar
                        )
                    )
            elif verdict == "ban":
                self.stats.update_one({"_id": podsuidmiy}, {"$set": {"banned": 1}})
                reason = self.reports.find_one({"_id": number_of_report})['reason']
                msg_id = self.reports.find_one({"_id": number_of_report})['msg_id']
                embed = disnake.Embed(
                    description="–í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã –∏–∑-–∑–∞ –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∂–∞–ª–æ–± –≤ –≤–∞—à—É —Å—Ç–æ—Ä–æ–Ω—É.\n"
                                "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –Ω–∞ [—Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏](https://discord.gg/YBzKe7vCYY) **AnonChat** –±–æ—Ç–∞.",
                    color=disnake.Color.red()
                    )
                embed.set_author(name="–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ AnonChat", icon_url=self.bot.user.avatar)
                await podsuidmiy_member.send(embed=embed)
                try:
                    comp = self.collection.find_one({'_id': podsuidmiy})['comp']
                    member = await self.bot.getch_user(comp)
                    if member is None:
                        try:
                            guild = self.collection.find_one({'_id': comp})['guild']
                            g = await self.bot.fetch_guild(guild)
                            member = await g.fetch_member(int(comp))
                        except:
                            comp = 0
                            member = None
                except:
                    comp = 0
                    member = None
                if comp != 0 and member is not None:
                    lol = {"_id": podsuidmiy}
                    self.collection.delete_one(lol)
                    self.search.delete_one(lol)

                    lol = {"_id": comp}
                    self.collection.delete_one(lol)
                    self.search.delete_one(lol)

                    try:
                        emb = embed_generator(
                            description="–í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–ª—É—á–∏–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –≤ **AnonChat**",
                            author_name='–ö–æ–Ω–µ—Ü —á–∞—Ç–∞', icon_url=self.bot.user.avatar
                            )

                        m = await member.send(embed=emb)
                        self.stats.update_one({"_id": member.id}, {"$set": {'stop_m': m.id}})
                    except:
                        pass
                    try:
                        emb1 = embed_generator(
                            description="–ß–∞—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –≤—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã\n",
                            author_name='–ö–æ–Ω–µ—Ü —á–∞—Ç–∞', icon_url=self.bot.user.avatar
                            )
                        emb1.set_footer(
                            text=f"{podsuidmiy_member.name}", icon_url=podsuidmiy_member.avatar
                            )

                        m1 = await podsuidmiy_member.send(embed=emb1)
                        self.stats.update_one(
                            {"_id": podsuidmiy_member.id}, {"$set": {'stop_m': m1.id}}
                            )
                    except:
                        pass

                await istec_member.send(
                    embed=embed_generator(
                        description=f"*–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∂–∞–ª–æ–±—É* **#{number_of_report}**.\n**{reason}**\n*–í–µ—Ä–¥–∏–∫—Ç: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏ –±–æ–ª—å—à–µ –Ω–µ —Å–º–æ–∂–µ—Ç –æ–±—â–∞—Ç—å—Å—è –≤* **AnonChat**.\n\n**–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ —Ö–æ—Ä–æ—à—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤ AnonChat!**",
                        author_name="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∂–∞–ª–æ–±–µ", icon_url=self.bot.user.avatar
                        )
                    )

                await inter.edit_original_response(view=None)
                channel = self.bot.get_guild(config.config['guild']).get_channel(config.config["channel3"])
                msg = await channel.fetch_message(msg_id)
                await msg.reply(
                    embed=embed_generator(
                        description=f'{inter.author.mention} –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞—è–≤–∫—É.\n*–í–µ—Ä–¥–∏–∫—Ç:* **{podsuidmiy} / {podsuidmiy_member}** `{"–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥—ë–Ω" if verdict == "warn" else "–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" if verdict == "ban" else "–ø—Ä–æ—â—ë–Ω"}`\n\n*–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∂–∞–ª–æ–±—ã:* **{istec} / {istec_member}**',
                        author_name="–í–µ—Ä–¥–∏–∫—Ç –ø–æ –∂–∞–ª–æ–±–µ", icon_url=self.bot.user.avatar
                        )
                    )
            else:
                reason = self.reports.find_one({"_id": number_of_report})['reason']
                msg_id = self.reports.find_one({"_id": number_of_report})['msg_id']

                await istec_member.send(
                    embed=embed_generator(
                        description=f"*–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∂–∞–ª–æ–±—É* **#{number_of_report}**.\n**{reason}**\n*–í–µ—Ä–¥–∏–∫—Ç: –º—ã –Ω–µ –Ω–∞—à–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π.*\n\n**–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ —Ö–æ—Ä–æ—à—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤ AnonChat!**",
                        author_name="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∂–∞–ª–æ–±–µ", icon_url=self.bot.user.avatar
                        )
                    )

                await inter.edit_original_response(view=None)
                channel = self.bot.get_guild(config.config['guild']).get_channel(config.config["channel3"])
                msg = await channel.fetch_message(msg_id)
                await msg.reply(
                    embed=embed_generator(
                        description=f'{inter.author.mention} –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞—è–≤–∫—É.\n*–í–µ—Ä–¥–∏–∫—Ç:* **{podsuidmiy} / {podsuidmiy_member}** `{"–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥—ë–Ω" if verdict == "warn" else "–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" if verdict == "ban" else "–ø—Ä–æ—â—ë–Ω"}`\n\n*–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∂–∞–ª–æ–±—ã:* **{istec} / {istec_member}**',
                        author_name="–í–µ—Ä–¥–∏–∫—Ç –ø–æ –∂–∞–ª–æ–±–µ", icon_url=self.bot.user.avatar
                        )
                    )


def setup(bot):
    bot.add_cog(Anon(bot))
